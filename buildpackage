#!/bin/bash

###########################################################################
# Looks up the package on reproducible.debian.net, uses that information to
# generate a suitable pbuilder world and then builds the package inside it.
# The return code is 0 on successful reproduction.

# This script uses sudo (as debootstrap requires it), so should be called
# with sudo to avoid password prompts.

PACKAGE=$1
ARCH=amd64

if [ -z "$PACKAGE" ]; then
    echo "usage: buildpackage <package name>"
    echo "Look up package names on https://reproducible.debian.net/unstable/amd64/index_all_abc.html"
    exit 1
fi

echo "Attempting to build '$PACKAGE'"

mkdir -p reproducible
sudo chmod 777 reproducible
cd reproducible

# Figure out how debian built it.
apt-get source --download-only $PACKAGE || exit 17 # But what if they haven't built that version?

VERSION=`ls ${PACKAGE}_*.dsc | sed -e s/$PACKAGE\_// -e s/.dsc$//`
wget https://reproducible.debian.net/buildinfo/unstable/amd64/${PACKAGE}_${VERSION}_${ARCH}.buildinfo -O ${PACKAGE}_${VERSION}_${ARCH}.buildinfo || exit 15
wget https://reproducible.debian.net/rb-pkg/unstable/${ARCH}/${PACKAGE}.html -O ${PACKAGE}.html || exit 16

BUILDTIME=`grep "span class=\"build-time\"" ${PACKAGE}.html | sed -e 's/^.*>at //' -e 's/<.*$//' -e 's/-//g' -e 's/ /T/' -e s'/://' -e 's/ UTC/00Z/'`;
echo "Build time was $BUILDTIME"

echo -n "apt-get -y --force-yes install " > temp_aptcmd
sed -e 's/^ //' -e 's/ (= /=/' -e 's/),\?$//' ${PACKAGE}_${VERSION}_${ARCH}.buildinfo | sed -n '/Build-Environment/,$p' | tail -n +2 | paste -s -d' ' >> temp_aptcmd

# Create a pbuilder world.
SNAPSHOTURL=http://snapshot.debian.org/archive/debian/${BUILDTIME}/

echo "Using the snapshot $SNAPSHOTURL"

sudo pbuilder create --basetgz /var/cache/pbuilder/base.tgz --mirror $SNAPSHOTURL --distribution sid --debootstrapopts "--keyring=/usr/share/keyrings/debian-archive-keyring.gpg" || exit 10

sudo cp /var/cache/pbuilder/base.tgz /var/cache/pbuilder/base-reproducible.tgz

# Update it
sudo pbuilder --execute --save-after-exec --basetgz /var/cache/pbuilder/base-reproducible.tgz ../chrootcommands || exit 11
sudo pbuilder --execute --save-after-exec --basetgz /var/cache/pbuilder/base-reproducible.tgz temp_aptcmd || exit 12 # You could probably combine these. 

# Do the actual build
sudo DEB_BUILD_OPTIONS=nocheck pbuilder --build --debbuildopts '-b' --basetgz /var/cache/pbuilder/base-reproducible.tgz ${PACKAGE}_*.dsc || exit 13
mkdir -p temp
dcmd cp /var/cache/pbuilder/result/${PACKAGE}_*.changes temp || exit 14

echo "Comparing buildinfo files. Any output after this line is an error!"

diff -q ${PACKAGE}_*.buildinfo temp/${PACKAGE}_*.buildinfo
code=$?
exit $code
